{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Letters.js\";\nimport React, { Component } from 'react';\nimport { Letter } from \"./Letter\";\nimport './App.css';\nexport class Letters extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectLetter = letter => {\n      this.props.selectLetter(letter);\n    };\n\n    this.showLetter = letter => {};\n  }\n\n  render() {\n    const letterStatus = Object.entries(this.props.letterStatus);\n    const chosenLettersMatrix = letterStatus.filter(letter => letter[1] == true);\n    const chosenLetters = chosenLettersMatrix.map(matrix => matrix[0]);\n    const availableLettersMatrix = letterStatus.filter(letter => letter[1] == false);\n    const availableLetters = availableLettersMatrix.map(matrix => matrix[0]);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Available Letters: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), availableLetters.map(letter => React.createElement(Letter, {\n      availableLetters: letter,\n      selectLetter: this.selectLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), chosenLetters.map(letter => React.createElement(Letter, {\n      chosenLetters: letter,\n      showLetter: this.showLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Letters.js"],"names":["React","Component","Letter","Letters","selectLetter","letter","props","showLetter","render","letterStatus","Object","entries","chosenLettersMatrix","filter","chosenLetters","map","matrix","availableLettersMatrix","availableLetters"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAEnCG,YAFmC,GAEnBC,MAAD,IAAY;AACvB,WAAKC,KAAL,CAAWF,YAAX,CAAwBC,MAAxB;AACH,KAJkC;;AAAA,SAMnCE,UANmC,GAMrBF,MAAD,IAAY,CAExB,CARkC;AAAA;;AAUnCG,EAAAA,MAAM,GAAE;AAEJ,UAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKL,KAAL,CAAWG,YAA1B,CAArB;AACA,UAAMG,mBAAmB,GAAGH,YAAY,CAACI,MAAb,CAAqBR,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAN,IAAa,IAA5C,CAA5B;AACA,UAAMS,aAAa,GAAGF,mBAAmB,CAACG,GAApB,CAAyBC,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAzC,CAAtB;AACA,UAAMC,sBAAsB,GAAGR,YAAY,CAACI,MAAb,CAAqBR,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAN,IAAa,KAA5C,CAA/B;AACA,UAAMa,gBAAgB,GAAGD,sBAAsB,CAACF,GAAvB,CAA4BC,MAAM,IAAIA,MAAM,CAAC,CAAD,CAA5C,CAAzB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB,EAEKE,gBAAgB,CAACH,GAAjB,CAAsBV,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAEA,MAA1B;AAAkC,MAAA,YAAY,EAAE,KAAKD,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,CAFL,EAGKU,aAAa,CAACC,GAAd,CAAmBV,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAEA,MAAvB;AAA+B,MAAA,UAAU,EAAE,KAAKE,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAHL,CADJ;AAOH;;AAzBkC","sourcesContent":["import React, { Component } from 'react'\nimport { Letter } from \"./Letter\";\nimport './App.css';\n\nexport class Letters extends Component {\n\n    selectLetter = (letter) => {\n        this.props.selectLetter(letter)\n    }\n\n    showLetter = (letter) => {\n        \n    }\n\n    render(){\n\n        const letterStatus = Object.entries(this.props.letterStatus)\n        const chosenLettersMatrix = letterStatus.filter( letter => letter[1] == true )\n        const chosenLetters = chosenLettersMatrix.map( matrix => matrix[0])\n        const availableLettersMatrix = letterStatus.filter( letter => letter[1] == false)\n        const availableLetters = availableLettersMatrix.map( matrix => matrix[0])\n\n        return (\n            <div>\n                Available Letters: <br></br>\n                {availableLetters.map( letter => <Letter availableLetters={letter} selectLetter={this.selectLetter}/> )}\n                {chosenLetters.map( letter => <Letter chosenLetters={letter} showLetter={this.showLetter}/> )}\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}