{"ast":null,"code":"import _objectSpread from \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport { Start } from './Letters.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this._selectLetter = letter => {\n      let newLetterStatus = _objectSpread({}, this.state.letterStatus);\n\n      newLetterStatus[letter] = true;\n      this.setState({\n        letterStatus: newLetterStatus\n      });\n    };\n\n    this._updateRiddle = riddle => {\n      this.setState({\n        riddleShown: riddle\n      });\n    };\n\n    this.state = {\n      letterStatus: this._generateLetterStatuses(),\n      riddleShown: null,\n      solutions: [{\n        hint: 'Vicki\\'s favorite food',\n        answer: 'Bamba'\n      }, {\n        hint: 'Best music genre is...?',\n        answer: 'Metal'\n      }, {\n        hint: 'Best OS is...? (hint: not windows)',\n        answer: 'Linux'\n      }, {\n        hint: 'blabla',\n        answer: 'blablablabalbalblabla'\n      }],\n      score: 0\n    };\n  }\n\n  _generateLetterStatuses() {\n    let alphabet = {};\n\n    for (let i = 0; i < 26; i++) {\n      alphabet[(i + 10).toString(36)] = false;\n    }\n\n    return alphabet;\n  }\n\n  _chooseRandomRiddle(riddlesArr) {\n    const randNum = Math.floor(Math.random() * riddlesArr.length);\n    return riddlesArr[randNum];\n  }\n\n  render() {\n    if (this.state.riddleShown) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Score, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Letters, {\n        letterStatus: this.state.letterStatus,\n        selectLetter: this._selectLetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Solution, {\n        letterStatus: this.state.letterStatus,\n        solution: this.state.solutions[0],\n        updateRiddle: this._updateRiddle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Start, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/App.js"],"names":["React","Component","Solution","Score","Letters","Start","App","constructor","_selectLetter","letter","newLetterStatus","state","letterStatus","setState","_updateRiddle","riddle","riddleShown","_generateLetterStatuses","solutions","hint","answer","score","alphabet","i","toString","_chooseRandomRiddle","riddlesArr","randNum","Math","floor","random","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport { Start } from './Letters.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      letterStatus: this._generateLetterStatuses(),\n      riddleShown: null,\n      solutions: [\n        {\n          hint: 'Vicki\\'s favorite food',\n          answer: 'Bamba'\n        },\n        {\n          hint: 'Best music genre is...?',\n          answer: 'Metal'\n        },\n        {\n          hint: 'Best OS is...? (hint: not windows)',\n          answer: 'Linux'\n        },\n        {\n          hint: 'blabla',\n          answer: 'blablablabalbalblabla'\n        }\n      ],\n      score: 0\n    }\n  }\n\n  _selectLetter = (letter) => {\n    let newLetterStatus = {...this.state.letterStatus}\n    newLetterStatus[letter] = true\n    this.setState({\n      letterStatus: newLetterStatus\n    })\n  }\n\n  _generateLetterStatuses(){\n    let alphabet = {}\n    for (let i=0; i<26; i++){\n        alphabet[((i+10).toString(36))] = false\n    }\n    return alphabet\n  }\n\n  _chooseRandomRiddle(riddlesArr){\n    const randNum = Math.floor(Math.random() * riddlesArr.length)\n    return riddlesArr[randNum]\n  }\n\n  _updateRiddle = (riddle) => {\n    this.setState({\n      riddleShown: riddle\n    })\n  }\n\n  render () {\n    if (this.state.riddleShown) {\n      return (\n        <div>\n          <Score score={this.state.score}/>\n          <Letters letterStatus={this.state.letterStatus} selectLetter={this._selectLetter} />\n          <Solution letterStatus={this.state.letterStatus} solution={this.state.solutions[0]} updateRiddle={this._updateRiddle}/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div>\n          <Start />\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}