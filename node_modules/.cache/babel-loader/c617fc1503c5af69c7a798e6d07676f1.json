{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js\";\nimport React, { Component } from 'react';\nimport { Letter } from \"./Letter\";\nexport class Solution extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateRiddle = () => {\n      this.updateRiddle(this.props.solution);\n    };\n\n    this.showLetter = (letter, index) => {\n      if (letter) {} else {\n        const numOfLetters = this.props.solution.answer.length;\n        const underScores = [];\n\n        for (let i = 0; i < numOfLetters; i++) {\n          underScores.push('_ ');\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"solution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.solution.hint), React.createElement(\"div\", {\n      id: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, underScores.map(underScore => underScore), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Letter, {\n      answer: this.props.solution.answer.split(''),\n      letterStatus: this.props.letterStatus,\n      showLetter: this.showLetter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js"],"names":["React","Component","Letter","Solution","updateRiddle","props","solution","showLetter","letter","index","numOfLetters","answer","length","underScores","i","push","render","hint","map","underScore","split","letterStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,YAFoC,GAErB,MAAM;AACjB,WAAKA,YAAL,CAAkB,KAAKC,KAAL,CAAWC,QAA7B;AACH,KAJmC;;AAAA,SAMpCC,UANoC,GAMvB,CAACC,MAAD,EAAQC,KAAR,KAAkB;AAC3B,UAAID,MAAJ,EAAY,CAEX,CAFD,MAGK;AACD,cAAME,YAAY,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,MAAhD;AACA,cAAMC,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,YAAhB,EAA8BI,CAAC,EAA/B,EAAkC;AAChCD,UAAAA,WAAW,CAACE,IAAZ,CAAiB,IAAjB;AACD;AACJ;AACJ,KAjBmC;AAAA;;AAmBpCC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IADzB,CADJ,EAII;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,WAAW,CAACK,GAAZ,CAAiBC,UAAU,IAAIA,UAA/B,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BS,KAA3B,CAAiC,EAAjC,CAAhB;AAAsD,MAAA,YAAY,EAAE,KAAKf,KAAL,CAAWgB,YAA/E;AAA6F,MAAA,UAAU,EAAE,KAAKd,UAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJJ,CADJ,CADJ;AAcH;;AAnCmC","sourcesContent":["import React, { Component } from 'react'\nimport { Letter } from \"./Letter\";\n\nexport class Solution extends Component {\n\n    updateRiddle = () => {\n        this.updateRiddle(this.props.solution)\n    }\n\n    showLetter = (letter,index) => {\n        if (letter) {\n\n        }\n        else {\n            const numOfLetters = this.props.solution.answer.length\n            const underScores = []\n            for (let i=0; i<numOfLetters; i++){\n              underScores.push('_ ')\n            }\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div class='solution'>\n                    <div id='hint'>\n                        {this.props.solution.hint}\n                    </div>\n                    <div id='answer'>\n                        {underScores.map( underScore => underScore)}\n                        <br></br>\n                        <Letter answer={this.props.solution.answer.split('')} letterStatus={this.props.letterStatus} showLetter={this.showLetter} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}