{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this._chooseRandomHint = function (hintsArr) {\n      const randNum = Math.floor(Math.random() * hintsArr.length);\n      return hintsArr[randNum];\n    };\n\n    this.state = {\n      letterStatus: this._generateLetterStatuses(),\n      solutions: [{\n        hint: 'Vicki\\'s favorite food',\n        answer: 'Bamba'\n      }, {\n        hint: 'Best music genre is...?',\n        answer: 'Metal'\n      }, {\n        hint: 'Best OS is...? (hint: not windows)',\n        answer: 'Linux'\n      }],\n      score: 0\n    };\n  }\n\n  _generateLetterStatuses() {\n    let alphabet = {};\n\n    for (let i = 0; i < 26; i++) {\n      alphabet[(i + 10).toString(36)] = false;\n    }\n\n    return alphabet;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Score, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Letters, {\n      letterStatus: this.state.letterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Solution, {\n      letterStatus: this.state.letterStatus,\n      solution: this.state.solutions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/App.js"],"names":["React","Component","Solution","Score","Letters","App","constructor","_chooseRandomHint","hintsArr","randNum","Math","floor","random","length","state","letterStatus","_generateLetterStatuses","solutions","hint","answer","score","alphabet","i","toString","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,WAAW,GAAE;AACX;;AADW,SA8BbC,iBA9Ba,GA8BO,UAASC,QAAT,EAAkB;AACpC,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAAhB;AACA,aAAOL,QAAQ,CAACC,OAAD,CAAf;AACD,KAjCY;;AAEX,SAAKK,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KAAKC,uBAAL,EADH;AAEXC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,wBADR;AAEEC,QAAAA,MAAM,EAAE;AAFV,OADS,EAKT;AACED,QAAAA,IAAI,EAAE,yBADR;AAEEC,QAAAA,MAAM,EAAE;AAFV,OALS,EAST;AACED,QAAAA,IAAI,EAAE,oCADR;AAEEC,QAAAA,MAAM,EAAE;AAFV,OATS,CAFA;AAgBXC,MAAAA,KAAK,EAAE;AAhBI,KAAb;AAkBD;;AAEDJ,EAAAA,uBAAuB,GAAE;AACvB,QAAIK,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAwB;AACpBD,MAAAA,QAAQ,CAAE,CAACC,CAAC,GAAC,EAAH,EAAOC,QAAP,CAAgB,EAAhB,CAAF,CAAR,GAAkC,KAAlC;AACH;;AACD,WAAOF,QAAP;AACD;;AAODG,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWM,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,KAAKN,KAAL,CAAWC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAnC;AAAiD,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA7CyB;;AAgD5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      letterStatus: this._generateLetterStatuses(),\n      solutions: [\n        {\n          hint: 'Vicki\\'s favorite food',\n          answer: 'Bamba'\n        },\n        {\n          hint: 'Best music genre is...?',\n          answer: 'Metal'\n        },\n        {\n          hint: 'Best OS is...? (hint: not windows)',\n          answer: 'Linux'\n        }\n      ],\n      score: 0\n    }\n  }\n\n  _generateLetterStatuses(){\n    let alphabet = {}\n    for (let i=0; i<26; i++){\n        alphabet[((i+10).toString(36))] = false\n    }\n    return alphabet\n  }\n\n  _chooseRandomHint = function(hintsArr){\n    const randNum = Math.floor(Math.random() * hintsArr.length)  \n    return hintsArr[randNum]\n  }\n\n  render () {\n    return (\n      <div>\n        <Score score={this.state.score}/>\n        <Letters letterStatus={this.state.letterStatus} />\n        <Solution letterStatus={this.state.letterStatus} solution={this.state.solutions}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}