{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js\";\nimport React, { Component } from 'react';\nimport { Letter } from \"./Letter\";\nexport class Solution extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let wordBreakDown = this.props.solution.word.split('');\n    let letters = Object.keys(this.props.letterStatus);\n    const underScore = '_';\n\n    for (let i = 0; i < letters.length; i++) {\n      if (this.props.letterStatus[letters[i]] == 'false') {\n        return React.createElement(\"div\", {\n          class: \"answer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Letter, {\n          letter: underScore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          class: \"answer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, wordBreakDown.map(letter => React.createElement(Letter, {\n          letter: letter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })));\n      }\n    } // return(\n    //     <div>\n    //         <div class='hint'>\n    //             {this.props.solution.hint}\n    //         </div>\n    //     </div>\n    // )\n\n  }\n\n} // export class Solution extends Component {\n//     updateRiddle = () => {\n//         this.updateRiddle(this.props.solution)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <div class='solution'>\n//                     <div id='hint'>\n//                         {this.props.solution.hint}\n//                     </div>\n//                     <div id='answer'>\n//                         <Letter answer={this.props.solution.answer.split('')} letterStatus={this.props.letterStatus}/>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js"],"names":["React","Component","Letter","Solution","constructor","render","wordBreakDown","props","solution","word","split","letters","Object","keys","letterStatus","underScore","i","length","map","letter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAGA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAEpCG,EAAAA,WAAW,GAAE;AACT;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,QAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,KAAzB,CAA+B,EAA/B,CAApB;AAEA,QAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAL,CAAWO,YAAvB,CAAd;AACA,UAAMC,UAAU,GAAG,GAAnB;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,OAAO,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,UAAG,KAAKT,KAAL,CAAWO,YAAX,CAAwBH,OAAO,CAACK,CAAD,CAA/B,KAAuC,OAA1C,EAAkD;AAC9C,eACI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAED,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OAND,MAOK;AACD,eACI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKT,aAAa,CAACY,GAAd,CAAmBC,MAAM,IAAI,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA7B,CADL,CADJ;AAKH;AACJ,KAtBG,CAwBJ;AACA;AAEA;AACA;AACA;AACA;AACA;;AACH;;AAtCmC,C,CA2CxC;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react'\nimport { Letter } from \"./Letter\";\n\n\nexport class Solution extends Component {\n\n    constructor(){\n        super()\n    }\n\n    render(){\n\n        let wordBreakDown = this.props.solution.word.split('')\n\n        let letters = Object.keys(this.props.letterStatus)\n        const underScore = '_'\n\n        for (let i=0; i<letters.length; i++){\n            if(this.props.letterStatus[letters[i]] == 'false'){\n                return(\n                    <div class='answer'>\n                        <Letter letter={underScore}/>\n                    </div>\n                )\n            }\n            else {\n                return(\n                    <div class='answer'>\n                        {wordBreakDown.map( letter => <Letter letter={letter}/>)}\n                    </div>\n                )\n            }\n        }\n\n        // return(\n        //     <div>\n                \n        //         <div class='hint'>\n        //             {this.props.solution.hint}\n        //         </div>\n        //     </div>\n        // )\n    }\n\n}\n\n\n// export class Solution extends Component {\n\n//     updateRiddle = () => {\n//         this.updateRiddle(this.props.solution)\n//     }\n\n    \n\n//     render() {\n\n//         return (\n//             <div>\n//                 <div class='solution'>\n//                     <div id='hint'>\n//                         {this.props.solution.hint}\n//                     </div>\n//                     <div id='answer'>\n//                         <Letter answer={this.props.solution.answer.split('')} letterStatus={this.props.letterStatus}/>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n\n// }"]},"metadata":{},"sourceType":"module"}