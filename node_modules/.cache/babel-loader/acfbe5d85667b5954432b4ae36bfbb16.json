{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/EndGame.js\";\nimport React, { Component } from 'react'; // import { Letter } from \"./Letter\";\n\nexport class EndGame extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.newGame = () => {\n      this.props.newGame();\n    };\n  }\n\n  render() {\n    const answerLetters = this.props.answer.split('').sort();\n    const letterStatusArr = Object.entries(this.props.letterStatus);\n    const trues = letterStatusArr.filter(innerArr => innerArr[1] == true).map(innerArr => innerArr[0]).sort();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"You've got \", answerLetters.length - this.props.counter, \" tries left.\"), this.props.counter == answerLetters.length //max tries exceeded\n    ? JSON.stringify(answerLetters) == JSON.stringify(trues) ? React.createElement(\"div\", {\n      class: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"You've got the correct answer! Congratulations!\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: this.props.video,\n      allow: \"autoplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"newGame\",\n      onClick: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Play Again!\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Amounts of tries exceeded. The answer is:\", React.createElement(\"span\", {\n      class: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", this.props.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"gameOver\",\n      onClick: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Play Again!\")) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/EndGame.js"],"names":["React","Component","EndGame","newGame","props","render","answerLetters","answer","split","sort","letterStatusArr","Object","entries","letterStatus","trues","filter","innerArr","map","length","counter","JSON","stringify","video"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAGA,OAAO,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAGnCE,OAHmC,GAGzB,MAAM;AACZ,WAAKC,KAAL,CAAWD,OAAX;AACH,KALkC;AAAA;;AAOnCE,EAAAA,MAAM,GAAE;AAEJ,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,KAAlB,CAAwB,EAAxB,EAA4BC,IAA5B,EAAtB;AACA,UAAMC,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKR,KAAL,CAAWS,YAA1B,CAAxB;AACA,UAAMC,KAAK,GAAGJ,eAAe,CAACK,MAAhB,CAAwBC,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAAR,IAAe,IAAnD,EAA0DC,GAA1D,CAA+DD,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAAnF,EAAwFP,IAAxF,EAAd;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBH,aAAa,CAACY,MAAd,GAAuB,KAAKd,KAAL,CAAWe,OADlD,iBADJ,EAIK,KAAKf,KAAL,CAAWe,OAAX,IAAsBb,aAAa,CAACY,MAApC,CAA2C;AAA3C,MACKE,IAAI,CAACC,SAAL,CAAef,aAAf,KAAiCc,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAjC,GACI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,MAAM,EAAC,KAA3B;AACA,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWkB,KADhB;AACuB,MAAA,KAAK,EAAC,UAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKnB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADJ,GASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAEE;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuB,KAAKC,KAAL,CAAWG,MAAlC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAE,KAAKJ,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CAVT,GAgBK,IApBV,CADJ;AAwBH;;AArCkC","sourcesContent":["import React, { Component } from 'react'\n// import { Letter } from \"./Letter\";\n\n\nexport class EndGame extends Component {\n\n\n    newGame = () => {\n        this.props.newGame()\n    }\n\n    render(){\n        \n        const answerLetters = this.props.answer.split('').sort()\n        const letterStatusArr = Object.entries(this.props.letterStatus)\n        const trues = letterStatusArr.filter( innerArr => innerArr[1] == true ).map( innerArr => innerArr[0]).sort()\n\n        return (\n            <div>\n                <span>\n                    You've got {answerLetters.length - this.props.counter} tries left.\n                </span>\n                {this.props.counter == answerLetters.length //max tries exceeded\n                    ? JSON.stringify(answerLetters) == JSON.stringify(trues)\n                        ? <div class='success'>\n                            You've got the correct answer! Congratulations!\n                            <br></br>\n                            <iframe width=\"560\" height=\"315\"\n                            src={this.props.video} allow=\"autoplay\"></iframe>\n                            <br></br>\n                            <button class='newGame' onClick={this.newGame}>Play Again!</button>\n                         </div>\n                        : <div>\n                            Amounts of tries exceeded. The answer is: \n                            <span class='answer'> {this.props.answer}</span>\n                            <br></br>\n                            <button class='gameOver' onClick={this.newGame}>Play Again!</button>\n                         </div>\n                    : null}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}