{"ast":null,"code":"import React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport { Start } from './Start.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {}\n\n} // class App extends Component {\n//   constructor(){\n//     super()\n//     this.state = {\n//       letterStatus: this._generateLetterStatuses(),\n//       riddleShown: null,\n//       solutions: [\n//         {\n//           hint: 'Vicki\\'s favorite food',\n//           answer: 'Bamba'\n//         },\n//         {\n//           hint: 'Best music genre is...?',\n//           answer: 'Metal'\n//         },\n//         {\n//           hint: 'Best OS is...? (hint: not windows)',\n//           answer: 'Linux'\n//         },\n//         {\n//           hint: 'blabla',\n//           answer: 'blablablabalbalblabla'\n//         }\n//       ],\n//       answer: '_',\n//       score: 0\n//     }\n//   }\n//   _updateAnswer = (letter) => {\n//     this.setState({\n//       answer: letter\n//     })\n//   }\n//   _selectLetter = (letter) => {\n//     let newLetterStatus = {...this.state.letterStatus}\n//     newLetterStatus[letter] = true\n//     this.setState({\n//       letterStatus: newLetterStatus\n//     })\n//   }\n//   _generateLetterStatuses(){\n//     let alphabet = {}\n//     for (let i=0; i<26; i++){\n//         alphabet[((i+10).toString(36))] = false\n//     }\n//     return alphabet\n//   }\n//   _chooseRandomRiddle(riddlesArr){\n//     const randNum = Math.floor(Math.random() * riddlesArr.length)\n//     return riddlesArr[randNum]\n//   }\n//   _updateRiddle = (riddle) => {\n//     this.setState({\n//       riddleShown: riddle\n//     })\n//   }\n//   render () {\n//     if (this.state.riddleShown) {\n//       return (\n//         <div>\n//           <Score score={this.state.score}/>\n//           <Letters letterStatus={this.state.letterStatus} selectLetter={this._selectLetter} updateAnswer={this._updateAnswer} currentRiddle={this.state.riddleShown}/>\n//           <Solution letterStatus={this.state.letterStatus} solution={this.state.solutions[0]} updateRiddle={this._updateRiddle}/>\n//         </div>\n//       )\n//     }\n//     else {\n//       return(\n//         <div>\n//           <Start updateRiddle={this._updateRiddle}/>\n//         </div>\n//       )\n//     }\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/App.js"],"names":["React","Component","Solution","Score","Letters","Start","App","constructor","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,WAAP;;AAIA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAE1BM,EAAAA,WAAW,GAAE;AACX;AACD;;AAEDC,EAAAA,MAAM,GAAE,CAEP;;AARyB,C,CAa5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Solution } from './Solution.js';\nimport { Score } from './Score.js';\nimport { Letters } from './Letters.js';\nimport { Start } from './Start.js';\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super()\n  }\n\n  render(){\n    \n  }\n\n}\n\n\n// class App extends Component {\n\n//   constructor(){\n//     super()\n//     this.state = {\n//       letterStatus: this._generateLetterStatuses(),\n//       riddleShown: null,\n//       solutions: [\n//         {\n//           hint: 'Vicki\\'s favorite food',\n//           answer: 'Bamba'\n//         },\n//         {\n//           hint: 'Best music genre is...?',\n//           answer: 'Metal'\n//         },\n//         {\n//           hint: 'Best OS is...? (hint: not windows)',\n//           answer: 'Linux'\n//         },\n//         {\n//           hint: 'blabla',\n//           answer: 'blablablabalbalblabla'\n//         }\n//       ],\n//       answer: '_',\n//       score: 0\n//     }\n//   }\n\n//   _updateAnswer = (letter) => {\n//     this.setState({\n//       answer: letter\n//     })\n//   }\n\n//   _selectLetter = (letter) => {\n//     let newLetterStatus = {...this.state.letterStatus}\n//     newLetterStatus[letter] = true\n//     this.setState({\n//       letterStatus: newLetterStatus\n//     })\n//   }\n  \n//   _generateLetterStatuses(){\n//     let alphabet = {}\n//     for (let i=0; i<26; i++){\n//         alphabet[((i+10).toString(36))] = false\n//     }\n//     return alphabet\n//   }\n\n//   _chooseRandomRiddle(riddlesArr){\n//     const randNum = Math.floor(Math.random() * riddlesArr.length)\n//     return riddlesArr[randNum]\n//   }\n\n//   _updateRiddle = (riddle) => {\n//     this.setState({\n//       riddleShown: riddle\n//     })\n//   }\n\n//   render () {\n//     if (this.state.riddleShown) {\n//       return (\n//         <div>\n//           <Score score={this.state.score}/>\n//           <Letters letterStatus={this.state.letterStatus} selectLetter={this._selectLetter} updateAnswer={this._updateAnswer} currentRiddle={this.state.riddleShown}/>\n//           <Solution letterStatus={this.state.letterStatus} solution={this.state.solutions[0]} updateRiddle={this._updateRiddle}/>\n//         </div>\n//       )\n//     }\n//     else {\n//       return(\n//         <div>\n//           <Start updateRiddle={this._updateRiddle}/>\n//         </div>\n//       )\n//     }\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}