{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js\";\nimport React, { Component } from 'react';\nimport { Letter } from \"./Letter\";\nexport class Solution extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateRiddle = () => {\n      this.updateRiddle(this.props.solution);\n    };\n\n    this.showLetter = (letter, index) => {\n      let solution = ['h', 'df'];\n\n      if (letter) {} else {\n        const numOfLetters = this.props.solution.answer.length;\n        const solution = [];\n\n        for (let i = 0; i < numOfLetters; i++) {\n          solution.push('_ ');\n        }\n      }\n\n      this.props.updateAnswer(solution);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"solution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"hint\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.solution.hint), React.createElement(\"div\", {\n      id: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Letter, {\n      answer: this.props.solution.answer.split(''),\n      letterStatus: this.props.letterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Solution.js"],"names":["React","Component","Letter","Solution","updateRiddle","props","solution","showLetter","letter","index","numOfLetters","answer","length","i","push","updateAnswer","render","hint","split","letterStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,YAFoC,GAErB,MAAM;AACjB,WAAKA,YAAL,CAAkB,KAAKC,KAAL,CAAWC,QAA7B;AACH,KAJmC;;AAAA,SAMpCC,UANoC,GAMvB,CAACC,MAAD,EAAQC,KAAR,KAAkB;AAC3B,UAAIH,QAAQ,GAAG,CAAC,GAAD,EAAM,IAAN,CAAf;;AACA,UAAIE,MAAJ,EAAY,CACX,CADD,MAEK;AACD,cAAME,YAAY,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,MAAhD;AACA,cAAMN,QAAQ,GAAG,EAAjB;;AACA,aAAK,IAAIO,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,YAAhB,EAA8BG,CAAC,EAA/B,EAAkC;AAChCP,UAAAA,QAAQ,CAACQ,IAAT,CAAc,IAAd;AACD;AACJ;;AACD,WAAKT,KAAL,CAAWU,YAAX,CAAwBT,QAAxB;AACH,KAlBmC;AAAA;;AAoBpCU,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IADzB,CADJ,EAII;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BO,KAA3B,CAAiC,EAAjC,CAAhB;AAAsD,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWc,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ,CADJ;AAYH;;AAlCmC","sourcesContent":["import React, { Component } from 'react'\nimport { Letter } from \"./Letter\";\n\nexport class Solution extends Component {\n\n    updateRiddle = () => {\n        this.updateRiddle(this.props.solution)\n    }\n\n    showLetter = (letter,index) => {\n        let solution = ['h', 'df']\n        if (letter) {\n        }\n        else {\n            const numOfLetters = this.props.solution.answer.length\n            const solution = []\n            for (let i=0; i<numOfLetters; i++){\n              solution.push('_ ')\n            }\n        }\n        this.props.updateAnswer(solution)\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div class='solution'>\n                    <div id='hint'>\n                        {this.props.solution.hint}\n                    </div>\n                    <div id='answer'>\n                        <Letter answer={this.props.solution.answer.split('')} letterStatus={this.props.letterStatus}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}