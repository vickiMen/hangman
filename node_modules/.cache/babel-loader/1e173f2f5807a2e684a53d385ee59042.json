{"ast":null,"code":"var _jsxFileName = \"/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Letters.js\";\nimport React, { Component } from 'react';\nimport { Letter } from \"./Letter\";\nimport './App.css';\nexport class Letters extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const letterStatus = Object.keys(this.props.letterStatus); // const chosenLettersMatrix = letterStatus.filter( letter => letter[1] == true )\n    // const chosenLetters = chosenLettersMatrix.map( matrix => matrix[0])\n    // const availableLettersMatrix = letterStatus.filter( letter => letter[1] == false)\n    // const availableLetters = availableLettersMatrix.map( matrix => matrix[0])\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Available Letters: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), letterStatus.map(letter => React.createElement(Letter, {\n      availableLetters: letter,\n      class: letter == false ? 'unselected' : 'unselected',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n} // export class Letters extends Component {\n//     selectLetter = (letter) => {\n//         this.props.selectLetter(letter)\n//     }\n//     showLetter = (letter,index) => {\n//         console.log(letter)\n//         let solution = ['h', 'df']\n//         if (letter) {\n//         }\n//         else {\n//             const numOfLetters = this.props.currentRiddle.answer.length\n//             const solution = []\n//             for (let i=0; i<numOfLetters; i++){\n//               solution.push('_ ')\n//             }\n//         }\n//         this.props.updateAnswer(solution)\n//     }\n//     render(){\n//         const letterStatus = Object.entries(this.props.letterStatus)\n//         const chosenLettersMatrix = letterStatus.filter( letter => letter[1] == true )\n//         const chosenLetters = chosenLettersMatrix.map( matrix => matrix[0])\n//         const availableLettersMatrix = letterStatus.filter( letter => letter[1] == false)\n//         const availableLetters = availableLettersMatrix.map( matrix => matrix[0])\n//         return (\n//             <div>\n//                 Available Letters: <br></br>\n//                 {availableLetters.map( letter => <Letter availableLetters={letter} selectLetter={this.selectLetter} showLetter={this.showLetter}/> )}\n//                 {chosenLetters.map( (letter,i) => <Letter chosenLetters={letter,i} /> )}\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/vickimenashe/Documents/Elevation/week7/react-hangman-ex-vickiMen/hangman/src/Letters.js"],"names":["React","Component","Letter","Letters","constructor","render","letterStatus","Object","keys","props","map","letter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAEnCG,EAAAA,WAAW,GAAE;AACT;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWH,YAAvB,CAArB,CAFI,CAGJ;AACA;AACA;AACA;;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB,EAEKA,YAAY,CAACI,GAAb,CAAkBC,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAEA,MAA1B;AAAkC,MAAA,KAAK,EAAGA,MAAM,IAAI,KAAV,GAAkB,YAAlB,GAAiC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAFL,CADJ;AAMH;;AArBkC,C,CAyBvC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { Letter } from \"./Letter\";\nimport './App.css';\n\nexport class Letters extends Component {\n\n    constructor(){\n        super()\n    }\n\n    render(){\n\n        const letterStatus = Object.keys(this.props.letterStatus)\n        // const chosenLettersMatrix = letterStatus.filter( letter => letter[1] == true )\n        // const chosenLetters = chosenLettersMatrix.map( matrix => matrix[0])\n        // const availableLettersMatrix = letterStatus.filter( letter => letter[1] == false)\n        // const availableLetters = availableLettersMatrix.map( matrix => matrix[0])\n\n\n        return(\n            <div>\n                Available Letters: <br></br>\n                {letterStatus.map( letter => <Letter availableLetters={letter} class={ letter == false ? 'unselected' : 'unselected'}/> )}\n            </div>\n        )\n    }\n\n}\n\n// export class Letters extends Component {\n\n//     selectLetter = (letter) => {\n//         this.props.selectLetter(letter)\n//     }\n\n//     showLetter = (letter,index) => {\n//         console.log(letter)\n//         let solution = ['h', 'df']\n//         if (letter) {\n//         }\n//         else {\n//             const numOfLetters = this.props.currentRiddle.answer.length\n//             const solution = []\n//             for (let i=0; i<numOfLetters; i++){\n//               solution.push('_ ')\n//             }\n//         }\n//         this.props.updateAnswer(solution)\n//     }\n\n//     render(){\n\n//         const letterStatus = Object.entries(this.props.letterStatus)\n//         const chosenLettersMatrix = letterStatus.filter( letter => letter[1] == true )\n//         const chosenLetters = chosenLettersMatrix.map( matrix => matrix[0])\n//         const availableLettersMatrix = letterStatus.filter( letter => letter[1] == false)\n//         const availableLetters = availableLettersMatrix.map( matrix => matrix[0])\n\n//         return (\n//             <div>\n//                 Available Letters: <br></br>\n//                 {availableLetters.map( letter => <Letter availableLetters={letter} selectLetter={this.selectLetter} showLetter={this.showLetter}/> )}\n//                 {chosenLetters.map( (letter,i) => <Letter chosenLetters={letter,i} /> )}\n//             </div>\n//         )\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}